/*
 * ApproveAPISwagger
 *
 * The simple API to request a user's approval on anything via email + sms.
 *
 * OpenAPI spec version: 1.0.1
 * Contact: dev@approveapi.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct CreatePromptRequest {
    /// The body of the approval request to show the user.
    #[serde(rename = "body")]
    pub body: String,
    /// The title of an approval request. Defaults to an empty string.
    #[serde(rename = "title")]
    pub title: Option<String>,
    /// The reject action text. If not specified the reject button will NOT be rendered, and the user will only see an approve action button.
    #[serde(rename = "reject_text")]
    pub reject_text: Option<String>,
    /// The number of seconds until this request can no longer be answered.
    #[serde(rename = "expires_in")]
    pub expires_in: Option<f32>,
    /// If true, the request waits (long-polls) until the user responds to the prompt or more than 10 minutes pass. Defaults to false.
    #[serde(rename = "long_poll")]
    pub long_poll: Option<bool>,
    /// The user to send the approval request to. Can be either an email address or a phone number.
    #[serde(rename = "user")]
    pub user: String,
    /// The approve action text. Defaults to 'Approve'.
    #[serde(rename = "approve_text")]
    pub approve_text: Option<String>,
    /// An HTTPS URL to redirect the user to if the prompt is approved. This URL is kept secret until the user is redirected to it.
    #[serde(rename = "approve_redirect_url")]
    pub approve_redirect_url: Option<String>,
    /// An HTTPS URL to redirect the user to if the prompt is rejected. This URL is kept secret until the user is redirected to it.
    #[serde(rename = "reject_redirect_url")]
    pub reject_redirect_url: Option<String>,
    #[serde(rename = "metadata")]
    pub metadata: Option<::models::PromptMetadata>,
}

impl CreatePromptRequest {
    pub fn new(body: String, user: String) -> CreatePromptRequest {
        CreatePromptRequest {
            body: body,
            title: None,
            reject_text: None,
            expires_in: None,
            long_poll: None,
            user: user,
            approve_text: None,
            approve_redirect_url: None,
            reject_redirect_url: None,
            metadata: None,
        }
    }
}
